{"version":3,"sources":["webpack:///webpack/bootstrap 51a98774da92d5e14314","webpack:///./client/src/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qD;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 51a98774da92d5e14314\n **/","var configs = {\n    WIDTH: 1000,\n    HEIGHT: 1000,\n    DOM_ELEMENT: 'app'\n};\nvar game = new Phaser.Game(configs.WIDTH, configs.HEIGHT, Phaser.AUTO, configs.DOM_ELEMENT);\ngame.state.add('AsteroidAdventures', AsteroidAdventures);\ngame.state.start('AsteroidAdventures', true, true, { \n    initialConfig: 'some initial state'\n});\n\nfunction AsteroidAdventures(){\n    var keys, \n        ship, \n        asteroid;\n        \n    var ACC = 3;\n    \n    this.init = function(config){\n        console.log('[PHASER] init', config);\n    };\n    this.preload = function(){\n        console.log('[PHASER] preload');\n        this.game.load.atlas('ships', '../assets/ships.png', '../assets/ships.json', Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);\n        this.game.load.atlas('asteroids', '../assets/asteroids.png', '../assets/asteroids.json', Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);\n    };\n    this.create = function(){\n        console.log('[PHASER] create');\n        \n        ship = this.game.add.sprite(this.world.centerX, this.world.centerY, 'ships');\n        ship.animations.add('idle', ['43'], 10, true);\n        this.game.add.existing(ship);\n        this.game.physics.enable(ship, Phaser.Physics.ARCADE);\n        ship.body.collideWorldBounds = true;\n        ship.anchor.setTo(0.5,0.5);\n        ship.scale.x *= -1;\n        \n        asteroid =  this.game.add.sprite(200, 200, 'asteroids');\n        asteroid.animations.add('idle', ['03'], 10, true);\n        asteroid.animations.play('idle');\n        this.game.add.existing(asteroid);\n        this.game.physics.enable(asteroid, Phaser.Physics.ARCADE);\n        ship.anchor.setTo(0.5,0.5);\n        asteroid.body.collideWorldBounds = true;\n        asteroid.body.velocity.x += Math.random() * 50;\n        asteroid.body.velocity.y += Math.random() * 50;\n        \n        keys = this.game.input.keyboard.createCursorKeys();\n        keys.space = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\n    };\n    this.update = function(){\n        console.log('[PHASER] update');\n        \n        game.physics.arcade.collide(ship, asteroid);\n        \n        ship.animations.play('idle');\n        ship.body.rotation = ship.body.angle * 180 / Math.PI;\n        \n        if(keys.right.isDown){\n            ship.body.velocity.x += ACC;\n        }\n        if(keys.left.isDown){\n            ship.body.velocity.x -= ACC;\n        }\n        if(keys.up.isDown){\n            ship.body.velocity.y -= ACC;\n        }\n        if(keys.down.isDown){\n            ship.body.velocity.y += ACC;\n        }\n    };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./client/src/index.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}